<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Application</name>
    </assembly>
    <members>
        <member name="T:Application.FileManager.FileManager">
            <summary>
            Class FileManager
            </summary>
        </member>
        <member name="M:Application.FileManager.FileManager.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="config">config</param>
        </member>
        <member name="M:Application.FileManager.FileManager.SaveImage(Microsoft.AspNetCore.Http.IFormFile)">
            <inheritdoc />
        </member>
        <member name="M:Application.FileManager.FileManager.ImageStream(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Application.FileManager.FileManager.RemoveImage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Application.FileManager.FileManager.ImageOptions">
            <summary>
            Method processes image via Magic Scaler
            </summary>
            <returns></returns>
        </member>
        <member name="T:Application.FileManager.IFileManager">
            <summary>
            Interface IFileManager
            </summary>
        </member>
        <member name="M:Application.FileManager.IFileManager.SaveImage(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Method saves the image
            </summary>
            <param name="image">image</param>
            <returns></returns>
        </member>
        <member name="M:Application.FileManager.IFileManager.ImageStream(System.String)">
            <summary>
            Method streams the image
            </summary>
            <param name="image">image</param>
            <returns></returns>
        </member>
        <member name="M:Application.FileManager.IFileManager.RemoveImage(System.String)">
            <summary>
            Method removes the image file
            </summary>
            <param name="image">image</param>
            <returns>bool</returns>
        </member>
        <member name="T:Application.Helpers.PageHelper">
            <summary>
            Class PageHelper
            </summary>
        </member>
        <member name="M:Application.Helpers.PageHelper.PageNumbers(System.Int32,System.Int32)">
            <summary>
            Method creates page numbers
            </summary>
            <param name="pageNumber">pageNumber</param>
            <param name="pageCount">pageCount</param>
            <returns></returns>
        </member>
        <member name="T:Application.Repository.IRepository">
            <summary>
            Interface IRepository
            </summary>
        </member>
        <member name="M:Application.Repository.IRepository.GetAllPosts">
            <summary>
            Method gets all the posts
            </summary>
            <returns>List&lt;Post&gt;</returns>
        </member>
        <member name="M:Application.Repository.IRepository.GetAllPosts(System.Int32,System.String)">
            <summary>
            Method gets all posts with pagination
            </summary>
            <param name="pageNumber">pageNumber</param>
            <param name="category">category</param>
            <returns></returns>
        </member>
        <member name="M:Application.Repository.IRepository.CreatePost(Domain.Post)">
            <summary>
            Method creates a post
            </summary>
            <param name="post">post</param>
        </member>
        <member name="M:Application.Repository.IRepository.ReadPost(System.Int32)">
            <summary>
            Method reads the post
            </summary>
            <param name="id">id</param>
            <returns>Post</returns>
        </member>
        <member name="M:Application.Repository.IRepository.UpdatePost(Domain.Post)">
            <summary>
            Method updates the post
            </summary>
            <param name="post">post</param>
        </member>
        <member name="M:Application.Repository.IRepository.DeletePost(System.Int32)">
            <summary>
            Method deletes the post
            </summary>
            <param name="id">id</param>
        </member>
        <member name="M:Application.Repository.IRepository.SaveChangesAsync">
            <summary>
            Method saves changes
            </summary>
            <returns>Task&lt;bool&gt;</returns>
        </member>
        <member name="M:Application.Repository.IRepository.AddSubComment(Domain.Comments.SubComment)">
            <summary>
            Method adds subcomment
            </summary>
            <param name="comment">comment</param>
        </member>
        <member name="T:Application.Repository.Repository">
            <summary>
            Class Repository
            </summary>
        </member>
        <member name="M:Application.Repository.Repository.#ctor(Persistence.AppDbContext)">
            <summary>
            Constructor
            </summary>
            <param name="ctx">ctx</param>
        </member>
        <member name="M:Application.Repository.Repository.GetAllPosts">
            <inheritdoc />
        </member>
        <member name="M:Application.Repository.Repository.GetAllPosts(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Application.Repository.Repository.CreatePost(Domain.Post)">
            <inheritdoc />
        </member>
        <member name="M:Application.Repository.Repository.ReadPost(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Application.Repository.Repository.UpdatePost(Domain.Post)">
            <inheritdoc />
        </member>
        <member name="M:Application.Repository.Repository.DeletePost(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Application.Repository.Repository.SaveChangesAsync">
            <inheritdoc />
        </member>
        <member name="M:Application.Repository.Repository.AddSubComment(Domain.Comments.SubComment)">
            <inheritdoc />
        </member>
        <member name="T:Application.ViewModels.IndexViewModel">
            <summary>
            Class IndexViewModel
            </summary>
        </member>
        <member name="P:Application.ViewModels.IndexViewModel.PageNumber">
            <summary>
            PageNumber
            </summary>
        </member>
        <member name="P:Application.ViewModels.IndexViewModel.PageCount">
            <summary>
            PageCount
            </summary>
        </member>
        <member name="P:Application.ViewModels.IndexViewModel.NextPage">
            <summary>
            NextPage
            </summary>
        </member>
        <member name="P:Application.ViewModels.IndexViewModel.Category">
            <summary>
            Category
            </summary>
        </member>
        <member name="P:Application.ViewModels.IndexViewModel.Posts">
            <summary>
            Posts
            </summary>
        </member>
        <member name="P:Application.ViewModels.IndexViewModel.Pages">
            <summary>
            Pages
            </summary>
        </member>
    </members>
</doc>
